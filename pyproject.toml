# SPDX-FileCopyrightText: Copyright © 2023 Idiap Research Institute <contact@idiap.ch>
#
# SPDX-FileContributor: Tim Laibacher, tim.laibacher@idiap.ch
# SPDX-FileContributor: Oscar Jiménez del Toro, oscar.jimenez@idiap.ch
# SPDX-FileContributor: Maxime Délitroz, maxime.delitroz@idiap.ch
# SPDX-FileContributor: Andre Anjos andre.anjos@idiap.ch
# SPDX-FileContributor: Daniel Carron, daniel.carron@idiap.ch
#
# SPDX-License-Identifier: GPL-3.0-or-later

[build-system]
    requires = ["setuptools>=61.0.0", "wheel"]
    build-backend = "setuptools.build_meta"

[project]
name = "deepdraw"
version = "1.4.1b0"
requires-python = ">=3.9"
description = "Binary Segmentation Benchmark Package"
dynamic = ["readme"]
license = {text = "GNU General Public License v3 (GPLv3)"}
authors = [
    {name = "Tim Laibacher", email = "tim.laibacher@idiap.ch"},
    {name = "Oscar Jimenez", email = "oscar.jimenez@idiap.ch"},
    {name = "Maxime Délitroz", email = "maxime.delitroz@idiap.ch"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "clapper",
    "click",
    "click_plugins",
    "matplotlib",
    "numpy",
    "scipy",
    "pandas",
    "h5py",
    "pillow",
    "psutil",
    "setuptools",
    "tabulate",
    "torch>=1.13",
    "torchvision>0.13",
    "tqdm",
    "scikit-image",
    "tensorboard",
    "tomli_w",
]

[project.urls]
documentation = "https://www.idiap.ch/software/biosignal/docs/biosignal/software/deepdraw/main/sphinx/"
homepage = "https://pypi.org/project/deepdraw"
repository = "https://gitlab.idiap.ch/biosignal/software/deepdraw"
changelog = "https://gitlab.idiap.ch/biosignal/software/deepdraw/-/releases"

[project.optional-dependencies]
qa = ["pre-commit"]
doc = [
    "sphinx",
    "furo",
    "sphinx-autodoc-typehints",
    "auto-intersphinx",
    "sphinx-copybutton",
    "sphinx-inline-tabs",
    "sphinx-click",
    "graphviz",
    ]
test = [
    "pytest",
    "pytest-cov",
    "coverage",
    ]

[project.scripts]
binseg = "deepdraw.binseg.script.cli:cli"
detect = "deepdraw.detect.script.cli:cli"

[project.entry-points."binseg.config"]
# models
driu = "deepdraw.binseg.configs.models.driu"
driu-bn = "deepdraw.binseg.configs.models.driu_bn"
driu-od = "deepdraw.binseg.configs.models.driu_od"
hed = "deepdraw.binseg.configs.models.hed"
m2unet = "deepdraw.binseg.configs.models.m2unet"
unet = "deepdraw.binseg.configs.models.unet"
resunet = "deepdraw.binseg.configs.models.resunet"
lwnet = "deepdraw.binseg.configs.models.lwnet"
# example datasets
csv-dataset-example = "deepdraw.binseg.configs.datasets.csv"
# drive dataset - retinography
drive = "deepdraw.binseg.configs.datasets.drive.default"
drive-768 = "deepdraw.binseg.configs.datasets.drive.default_768"
drive-1024 = "deepdraw.binseg.configs.datasets.drive.default_1024"
drive-2nd = "deepdraw.binseg.configs.datasets.drive.second_annotator"
drive-xtest = "deepdraw.binseg.configs.datasets.drive.xtest"
drive-mtest = "deepdraw.binseg.configs.datasets.drive.mtest"
drive-covd = "deepdraw.binseg.configs.datasets.drive.covd"
# drhagis dataset - retinography
drhagis = "deepdraw.binseg.configs.datasets.drhagis.default"
# stare dataset - retinography
stare = "deepdraw.binseg.configs.datasets.stare.ah"
stare-768 = "deepdraw.binseg.configs.datasets.stare.ah_768"
stare-1024 = "deepdraw.binseg.configs.datasets.stare.ah_1024"
stare-2nd = "deepdraw.binseg.configs.datasets.stare.vk"
stare-xtest = "deepdraw.binseg.configs.datasets.stare.xtest"
stare-mtest = "deepdraw.binseg.configs.datasets.stare.mtest"
stare-covd = "deepdraw.binseg.configs.datasets.stare.covd"
# iostar - retinography
iostar-vessel = "deepdraw.binseg.configs.datasets.iostar.vessel"
iostar-vessel-768 = "deepdraw.binseg.configs.datasets.iostar.vessel_768"
iostar-vessel-xtest = "deepdraw.binseg.configs.datasets.iostar.vessel_xtest"
iostar-vessel-mtest = "deepdraw.binseg.configs.datasets.iostar.vessel_mtest"
iostar-disc = "deepdraw.binseg.configs.datasets.iostar.optic_disc"
iostar-disc-512 = "deepdraw.binseg.configs.datasets.iostar.optic_disc_512"
iostar-disc-768 = "deepdraw.binseg.configs.datasets.iostar.optic_disc_768"
iostar-vessel-covd = "deepdraw.binseg.configs.datasets.iostar.covd"
# hrf - retinography
hrf = "deepdraw.binseg.configs.datasets.hrf.default"
hrf-768 = "deepdraw.binseg.configs.datasets.hrf.default_768"
hrf-1024 = "deepdraw.binseg.configs.datasets.hrf.default_1024"
hrf-xtest = "deepdraw.binseg.configs.datasets.hrf.xtest"
hrf-mtest = "deepdraw.binseg.configs.datasets.hrf.mtest"
hrf-highres = "deepdraw.binseg.configs.datasets.hrf.default_fullres"
hrf-covd = "deepdraw.binseg.configs.datasets.hrf.covd"
# chase-db1 - retinography
chasedb1 = "deepdraw.binseg.configs.datasets.chasedb1.first_annotator"
chasedb1-768 = "deepdraw.binseg.configs.datasets.chasedb1.first_annotator_768"
chasedb1-1024 = "deepdraw.binseg.configs.datasets.chasedb1.first_annotator_1024"
chasedb1-2nd = "deepdraw.binseg.configs.datasets.chasedb1.second_annotator"
chasedb1-xtest = "deepdraw.binseg.configs.datasets.chasedb1.xtest"
chasedb1-mtest = "deepdraw.binseg.configs.datasets.chasedb1.mtest"
chasedb1-covd = "deepdraw.binseg.configs.datasets.chasedb1.covd"
# drionsdb - retinography
drionsdb = "deepdraw.binseg.configs.datasets.drionsdb.expert1"
drionsdb-512 = "deepdraw.binseg.configs.datasets.drionsdb.expert1_512"
drionsdb-768 = "deepdraw.binseg.configs.datasets.drionsdb.expert1_768"
drionsdb-2nd = "deepdraw.binseg.configs.datasets.drionsdb.expert2"
drionsdb-2nd-512 = "deepdraw.binseg.configs.datasets.drionsdb.expert2_512"
# drishti-gs1 - retinography
drishtigs1-disc = "deepdraw.binseg.configs.datasets.drishtigs1.disc_all"
drishtigs1-disc-512 = "deepdraw.binseg.configs.datasets.drishtigs1.disc_all_512"
drishtigs1-disc-768 = "deepdraw.binseg.configs.datasets.drishtigs1.disc_all_768"
drishtigs1-cup = "deepdraw.binseg.configs.datasets.drishtigs1.cup_all"
drishtigs1-cup-512 = "deepdraw.binseg.configs.datasets.drishtigs1.cup_all_512"
drishtigs1-cup-768 = "deepdraw.binseg.configs.datasets.drishtigs1.cup_all_768"
drishtigs1-disc-any = "deepdraw.binseg.configs.datasets.drishtigs1.disc_any"
drishtigs1-cup-any = "deepdraw.binseg.configs.datasets.drishtigs1.cup_any"
# refuge - retinography
refuge-cup = "deepdraw.binseg.configs.datasets.refuge.cup"
refuge-cup-512 = "deepdraw.binseg.configs.datasets.refuge.cup_512"
refuge-cup-768 = "deepdraw.binseg.configs.datasets.refuge.cup_768"
refuge-disc = "deepdraw.binseg.configs.datasets.refuge.disc"
refuge-disc-512 = "deepdraw.binseg.configs.datasets.refuge.disc_512"
refuge-disc-768 = "deepdraw.binseg.configs.datasets.refuge.disc_768"
# rim one r3 - retinography
rimoner3-cup = "deepdraw.binseg.configs.datasets.rimoner3.cup_exp1"
rimoner3-disc = "deepdraw.binseg.configs.datasets.rimoner3.disc_exp1"
rimoner3-cup-512 = "deepdraw.binseg.configs.datasets.rimoner3.cup_exp1_512"
rimoner3-cup-768 = "deepdraw.binseg.configs.datasets.rimoner3.cup_exp1_768"
rimoner3-disc-512 = "deepdraw.binseg.configs.datasets.rimoner3.disc_exp1_512"
rimoner3-disc-768 = "deepdraw.binseg.configs.datasets.rimoner3.disc_exp1_768"
rimoner3-cup-2nd = "deepdraw.binseg.configs.datasets.rimoner3.cup_exp2"
rimoner3-disc-2nd = "deepdraw.binseg.configs.datasets.rimoner3.disc_exp2"
# combined vessels - retinography
combined-vessels = "deepdraw.binseg.configs.datasets.combined.vessel"
# combined discs - retinography
combined-disc = "deepdraw.binseg.configs.datasets.combined.od"
# combined cups - retinography
combined-cup = "deepdraw.binseg.configs.datasets.combined.oc"
# montgomery county - cxr
montgomery = "deepdraw.binseg.configs.datasets.montgomery.default"
montgomery-xtest = "deepdraw.binseg.configs.datasets.montgomery.xtest"
# shenzhen - cxr
shenzhen = "deepdraw.binseg.configs.datasets.shenzhen.default"
shenzhen-small = "deepdraw.binseg.configs.datasets.shenzhen.default_256"
shenzhen-xtest = "deepdraw.binseg.configs.datasets.shenzhen.xtest"
# jsrt - cxr
jsrt = "deepdraw.binseg.configs.datasets.jsrt.default"
jsrt-xtest = "deepdraw.binseg.configs.datasets.jsrt.xtest"
# cxr8 - cxr
cxr8 = "deepdraw.binseg.configs.datasets.cxr8.default"
cxr8-idiap = "deepdraw.binseg.configs.datasets.cxr8.idiap"
cxr8-xtest = "deepdraw.binseg.configs.datasets.cxr8.xtest"
cxr8-idiap-xtest = "deepdraw.binseg.configs.datasets.cxr8.xtest_idiap"

[project.entry-points."detect.config"]
# models
faster-rcnn = "deepdraw.detect.configs.models.faster_rcnn"
# example datasets
csv-dataset-example = "deepdraw.detect.configs.datasets.csv"
# montgomery county - cxr
montgomery = "deepdraw.detect.configs.datasets.montgomery.default"
montgomery-xtest = "deepdraw.detect.configs.datasets.montgomery.xtest"
# shenzhen - cxr
shenzhen = "deepdraw.detect.configs.datasets.shenzhen.default"
shenzhen-small = "deepdraw.detect.configs.datasets.shenzhen.default_256"
shenzhen-xtest = "deepdraw.detect.configs.datasets.shenzhen.xtest"
# jsrt - cxr
jsrt = "deepdraw.detect.configs.datasets.jsrt.default"
jsrt-xtest = "deepdraw.detect.configs.datasets.jsrt.xtest"
# cxr8 - cxr
cxr8 = "deepdraw.detect.configs.datasets.cxr8.default"
cxr8-idiap = "deepdraw.detect.configs.datasets.cxr8.idiap"
cxr8-xtest = "deepdraw.detect.configs.datasets.cxr8.xtest"
cxr8-idiap-xtest = "deepdraw.detect.configs.datasets.cxr8.xtest_idiap"
# chexphoto - cxr
chexphoto = "deepdraw.detect.configs.datasets.chexphoto.default"
chexphoto-xtest = "deepdraw.detect.configs.datasets.chexphoto.xtest"

[tool.setuptools]
zip-safe = true
package-dir = {"" = "src"}

[tool.setuptools.dynamic]
readme = {file = "README.md"}

[tool.distutils.bdist_wheel]
universal = true

[tool.isort]
profile = "black"
line_length = 80
order_by_type = true
lines_between_types = 1

[tool.black]
line-length = 80

[tool.pytest.ini_options]
addopts = [
    "--cov=deepdraw",
    "--cov-report=term-missing",
    "--import-mode=append",
]
junit_logging = "all"
junit_log_passing_tests = false
